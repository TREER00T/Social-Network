info:
  title: Social Network Socket.io API
  version: 2.1.0
  contact:
    email: treeroot.ir@gmail.com
    phone: '+989030207892'
  license:
    name: MIT
    url: https://github.com/TREER00T/Social-Network-Server/blob/main/LICENSE
  description: Social Network API Documentation

baseUrl: http://localhost:4000

tags:
  - name: E2E
    description: End-to-end data transfer operations
  - name: Group
    description: Group room for data transfer operations
  - name: Channel
    description: Channel room for data transfer operations

securityDefinitions:
  apiKey:
    description: Socket.io uses a persistent Api Key.
    type: apiKey
    in: query
    schema: all
    name: apiKey
  token:
    description: Socket.io uses a persistent JWT Token.
    type: apiKey
    in: header
    schema: all
    name: authorization


paths:

  /*:
    - on: connection
      events:
        - name: emitNotifyListOfUserOnlineStatus
          description: By notifying all sockets known to the user.
        - name: emitListOfUserOnlineStatusForSpecificUser
          description: Return list of active userId

    - on: disconnect
      events:
        - name: emitNotifyListOfUserOnlineStatus
          description: By notifying all sockets known to the user.
        - name: emitListOfUserOnlineStatusForSpecificUser
          description: Return list of active userId

  /e2e:
    - on: onPvTyping
      tags:
        - E2E
      parameters:
        - $ref:
            - components/ReceiverId
      events:
        - $ref:
            - components/emitPvTypingError
            - components/emitPvTyping

    - on: onPvSendMessage
      tags:
        - E2E
      parameters:
        - $ref:
            - components/ReceiverId
            - components/MessageCreatedBySenderId
            - components/DataMessage
      events:
        - $ref:
            - components/emitPvSendMessageError
            - components/emitPvSendMessage

    - on: onPvEditMessage
      tags:
        - E2E
      parameters:
        - $ref:
            - components/ReceiverId
            - components/DataMessage
            - components/MessageId
      events:
        - $ref:
            - components/emitPvEditMessageError
            - components/emitPvEditMessage

    - on: onPvDeleteMessage
      tags:
        - E2E
      parameters:
        - $ref:
            - components/ReceiverId
            - components/ListOfId
      events:
        - $ref:
            - components/emitPvDeleteMessageError
            - components/emitPvDeleteMessage

  /group:
    - on: onGroupSendMessage
      tags:
        - Group
      parameters:
        - $ref:
            - components/RoomId
            - components/DataMessage
      events:
        - $ref:
            - components/emitGroupSendMessageError
            - components/emitGroupSendMessage

    - on: onGroupEditMessage
      tags:
        - Group
      parameters:
        - $ref:
            - components/DataMessage
            - components/RoomId
            - components/MessageId
      events:
        - $ref:
            - components/emitGroupEditMessageError
            - components/emitGroupEditMessage

    - on: onGroupDeleteMessage
      tags:
        - Group
      parameters:
        - $ref:
            - components/RoomId
            - components/ListOfId
      events:
        - $ref:
            - components/emitGroupDeleteMessageError
            - components/emitGroupDeleteMessage

  /channel:
    - on: onChannelSendMessage
      tags:
        - Channel
      parameters:
        - $ref:
            - components/RoomId
            - components/DataMessage
      events:
        - $ref:
            - components/emitChannelSendMessageError
            - components/emitChannelSendMessage

    - on: onChannelEditMessage
      tags:
        - Channel
      parameters:
        - $ref:
            - components/DataMessage
            - components/RoomId
            - components/MessageId
      events:
        - $ref:
            - components/emitChannelEditMessageError
            - components/emitChannelEditMessage

    - on: onChannelDeleteMessage
      tags:
        - Channel
      parameters:
        - $ref:
            - components/RoomId
            - components/ListOfId
      events:
        - $ref:
            - components/emitChannelDeleteMessageError
            - components/emitChannelDeleteMessage


definitions:
  Online Status:
    - name: userId
      type: string
    - name: isOnline
      type: boolean
  Status Code & Message:
    - name: statusCode
      type: integer
      description: Http status code
    - name: message
      type: string
      description: Http status message



components:
  events:
    emitPvTypingError:
      - name: emitPvTypingError
        description: Return error status code and message
    emitPvTyping:
      - name: emitPvTyping
        description: Emitting user pv typing
    emitPvMessageError:
      - name: emitPvMessageError
        description: Return error status code and message
    emitPvMessage:
      - name: emitPvMessage
        description: Emitting message for specific user into pv chat
    emitPvEditMessageError:
      - name: emitPvEditMessageError
        description: Return error status code and message
    emitPvEditMessage:
      - name: emitPvEditMessage
        description: Emitting message edited for specific user into pv chat
    emitPvDeleteMessageError:
      - name: emitPvDeleteMessageError
        description: Return error status code and message
    emitPvDeleteMessage:
      - name: emitPvDeleteMessage
        description: Emitting list of message id deleted for specific user into pv chat
    emitGroupMessageError:
      - name: emitGroupMessageError
        description: Return error status code and message
    emitGroupMessage:
      - name: emitGroupMessage
        description: Emitting message for specific group
    emitGroupEditMessageError:
      - name: emitGroupEditMessageError
        description: Return error status code and message
    emitGroupEditMessage:
      - name: emitGroupEditMessage
        description: Emitting message edited for specific group
    emitGroupDeleteMessageError:
      - name: emitGroupDeleteMessageError
        description: Return error status code and message
    emitGroupDeleteMessage:
      - name: emitGroupDeleteMessage
        description: Emitting list of message id deleted for specific group
    emitChannelMessageError:
      - name: emitChannelMessageError
        description: Return error status code and message
    emitChannelMessage:
      - name: emitChannelMessage
        description: Emitting message for specific channel
    emitChannelEditMessageError:
      - name: emitChannelEditMessageError
        description: Return error status code and message
    emitChannelEditMessage:
      - name: emitChannelEditMessage
        description: Emitting message edited for specific channel
    emitChannelDeleteMessageError:
      - name: emitChannelDeleteMessageError
        description: Return error status code and message
    emitChannelDeleteMessage:
      - name: emitChannelDeleteMessage
        description: Emitting list of message id deleted for specific channel
  parameters:
    ReceiverId:
      - in: param
        name: receiverId
        type: string
        required: true
    MessageCreatedBySenderId:
      - in: param
        name: messageCreatedBySenderId
        type: string
        required: true
    MessageSentRoomId:
      - in: param
        name: messageSentRoomId
        type: string
        required: true
    RoomId:
      - in: param
        name: roomId
        type: string
        required: true
    ListOfId:
      - in: param
        name: array
        type: integer
        required: true
    MessageId:
      - in: param
        name: messageId
        type: string
        required: true
    DataMessage:
      - in: param
        name: text
        type: string
      - in: param
        name: type
        description: default is None, other type => ['None', 'Image', 'Location', 'Document', 'Video', 'Voice']
        type: string
      - in: param
        name: targetReplyId
        type: string
      - in: param
        name: forwardDataId
        type: string
      - in: param
        name: locationLat
        type: string
      - in: param
        name: locationLon
        type: string
      - in: param
        name: isReply
        type: boolean
      - in: param
        name: isForward
        type: boolean